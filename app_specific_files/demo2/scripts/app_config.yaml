jupiter_config:
  # Jupiter subsystems will be deployed in separate k8s namespaces. Using
  # different prefixes allows multiple users to use the same k8s cluster. 
  # e.g. prefix "jason" results in namespaces: 
  # jason-exec 
  # jason-circe 
  # jason-profiler
  # jason-mapper
  namespace_prefix: quynh
  # Docker registry prefix for pulling and pushing images. Set to empty string for
  # Docker Hub. Examples: "anrg", "docker.io/anrg", "gcr.io/organization_name", ""
  docker_registry: anrg
node_list:
  # "home" is required. All other names should be "node*" where * is some
  # integer.
  home: workers-s-1vcpu-3gb-0-nyc1
  node1: workers-s-1vcpu-3gb-1-sgp1
  node2: workers-s-1vcpu-3gb-2-fra1
  node3: workers-s-1vcpu-3gb-3-tor1
  node4: workers-s-1vcpu-3gb-4-lon1
  node5: workers-s-1vcpu-3gb-7-ams3 
  node6: workers-s-1vcpu-3gb-8-nyc3
  node7: workers-s-1vcpu-3gb-9-lon1
application:
  ports:
    # these ports are to be exposed by app docker containers and also exposed via k8s service
    # available range: 50000-60000
    - 57021
  num_tasks: 25 #base is 18, add 7 everytime adding a new set
  sources:
  - name: datasource1
    dataset: fireengine
    datapath: data/fireengine
    stream_image: docker.io/anrg/streams_home:fireengine
    #this should be a node that jupiter wont schedule nodes on   
    node_placement: workers-s-1vcpu-3gb-5-fra1 
  - name: datasource2
    dataset: schoolbus
    datapath: data/schoolbus
    stream_image: docker.io/anrg/streams_home:schoolbus
    #this should be a node that jupiter wont schedule nodes on   
    node_placement: workers-s-1vcpu-3gb-6-fra1
  task_list:
    home: home  #TODO
    sinks:
    worker_tasks:
      - name: master
        # node_placement: n2
        base_script: master.py 
        inputs_to_wait_for: 9
        output_policy: BATCHED_CUSTOM_ORDER
        children:  # child order determines round robin sequence
          - resnet0
          - resnet1
          - resnet2
          - resnet3
          - resnet4
          - resnet5
          - resnet6
          - resnet7
          - resnet8
          - collage
        infile_prefix: n0
        outfile_prefix: master
        dag_task: True
      - name: resnet0
        base_script: resnet0.py 
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet0
        dag_task: True
      - name: resnet1
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet1
        dag_task: True
      - name: resnet2
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet2
        dag_task: True
      - name: resnet3
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet3
        dag_task: True
      - name: resnet4
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet4
        dag_task: True
      - name: resnet5
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet5
        dag_task: True
      - name: resnet6
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet6
        dag_task: True
      - name: resnet7
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet7
        dag_task: True
      - name: resnet8
        base_script: resnet0.py
        inputs_to_wait_for: 1
        # output_policy: UNICAST
        children:
          - storeclass1
          - storeclass2
        infile_prefix: master
        outfile_prefix: resnet8
        dag_task: True
      - name: collage
        base_script: collage.py
        inputs_to_wait_for: 1
        # output_policy: POINT_TO_POINT_BROADCAST
        infile_prefix: master
        outfile_prefix: collage
        dag_task: True
      - name: storeclass1
        base_script: storeclass1.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children:
          - lccenc1
        infile_prefix: resnet
        outfile_prefix: storeclass1
        dag_task: True
      - name: storeclass2
        base_script: storeclass1.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children:
          - lccenc2
        infile_prefix: resnet
        outfile_prefix: storeclass2
        dag_task: True
      - name: lccenc1
        base_script: lccenc1.py
        inputs_to_wait_for: 4
        output_policy: BATCHED_CUSTOM_ORDER
        children:
          - score1a
          - score1b
          - score1c
        infile_prefix: storeclass1
        outfile_prefix: lccenc1
        dag_task: True
      - name: lccenc2
        base_script: lccenc1.py
        inputs_to_wait_for: 4
        output_policy: BATCHED_CUSTOM_ORDER
        children:
          - score2a
          - score2b
          - score2c
        infile_prefix: storeclass2
        outfile_prefix: lccenc2
        dag_task: True
      - name: score1a
        base_script: score1a.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - preagg1
        infile_prefix: lccenc1
        outfile_prefix: score1a
        dag_task: True
      - name: score1b
        base_script: score1a.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - preagg1
        infile_prefix: lccenc1
        outfile_prefix: score1b
        dag_task: True
      - name: score1c
        base_script: score1a.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - preagg1
        infile_prefix: lccenc1
        outfile_prefix: score1c
        dag_task: True
      - name: score2a
        base_script: score1a.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - preagg2
        infile_prefix: lccenc2
        outfile_prefix: score2a
        dag_task: True
      - name: score2b
        base_script: score1a.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - preagg2
        infile_prefix: lccenc2
        outfile_prefix: score2b
        dag_task: True
      - name: score2c
        base_script: score1a.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - preagg2
        infile_prefix: lccenc2
        outfile_prefix: score2c
        dag_task: True
      - name: preagg1
        base_script: preagg1.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - lccdec1
        infile_prefix: score1
        outfile_prefix: preagg1
        dag_task: True
      - name: preagg2
        base_script: preagg1.py
        inputs_to_wait_for: 1
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - lccdec2
        infile_prefix: score2
        outfile_prefix: preagg2
        dag_task: True
      - name: lccdec1
        base_script: lccdec1.py
        inputs_to_wait_for: 2
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - home
        infile_prefix: preagg1
        outfile_prefix: lccdec1
        dag_task: True
      - name: lccdec2
        base_script: lccdec1.py
        inputs_to_wait_for: 2
        output_policy: POINT_TO_POINT_BROADCAST
        children: 
          - home
        infile_prefix: preagg2
        outfile_prefix: lccdec2
        dag_task: True