==================
Start the HEFT scheduler
#############################################################################################
                                   result for tpheft
#############################################################################################
==============================================
               print task info
==============================================
task_number            task_uprank
(0, '              ', 14647.11352072661)
(1, '              ', 10155.454051730438)
(2, '              ', 3644.6284466977377)
(3, '              ', 579)
==============================================
               print processor info
==============================================
processor_number     task_number     start_time     end_time
('     ', 1, '      ', 3, '    ', 0, '    ', 390)
('     ', 4, '      ', 1, '    ', 0, '    ', 4873)
('     ', 6, '      ', 0, '    ', 0, '    ', 1232)
('     ', 7, '      ', 2, '    ', 0, '    ', 264)
==============================================
               print link info
==============================================
link_name    start_task_num   end_task_num   start_time   end_time
('4_1', '      ', 1, '      ', 3, '       ', 0, '      ', 164.2297309189021)
('6_4', '      ', 0, '      ', 1, '       ', 0, '      ', 191.49625653500223)
('6_7', '      ', 0, '      ', 2, '       ', 0, '      ', 215.31239952728833)
('7_1', '      ', 2, '      ', 3, '       ', 0, '      ', 229.58290700450422)
current bottleneck number  4
procid to max time in split
{0: 7188.0, 2: 5818.0, 3: 5267.0, 5: 9604.0, 8: 10065.0, 9: 8152.0, 10: 5277.0, 11: 10874.0, 12: 6880.0, 13: 10395.0, 14: 7750.0}
replicate btnk node on  3
current bottleneck number  3
procid to max time in split
{0: 7188.0, 2: 5818.0, 5: 9604.0, 8: 10065.0, 9: 8152.0, 10: 5277.0, 11: 10874.0, 12: 6880.0, 13: 10395.0, 14: 7750.0}
replicate btnk node on  10
current bottleneck number  4
procid to max time in split
{0: 7188.0, 2: 5818.0, 5: 9604.0, 8: 10065.0, 9: 8152.0, 11: 10874.0, 12: 6880.0, 13: 10395.0, 14: 7750.0}
replicate btnk node on  2
current bottleneck number  10
procid to max time in split
{0: 7188.0, 5: 9604.0, 8: 10065.0, 9: 8152.0, 11: 10874.0, 12: 6880.0, 13: 10395.0, 14: 7750.0}
replicate btnk node on  12
current bottleneck number  2
procid to max time in split
{0: 7188.0, 5: 9604.0, 8: 10065.0, 9: 8152.0, 11: 10874.0, 13: 10395.0, 14: 7750.0}
replicate btnk node on  0
current bottleneck number  12
procid to max time in split
{5: 9604.0, 8: 10065.0, 9: 8152.0, 11: 10874.0, 13: 10395.0, 14: 7750.0}
replicate btnk node on  14
current bottleneck number  0
procid to max time in split
{8: 10065.0, 9: 8152.0, 11: 10874.0, 5: 9604.0, 13: 10395.0}
replicate btnk node on  9
current bottleneck number  6
procid to max time in split
{8: 2668.9578580143734, 11: 3359.0, 5: 2564.0, 13: 5206.113806603267}
replicate btnk node on  5
current bottleneck number  14
procid to max time in split
{8: 10065.0, 11: 10874.0, 13: 10395.0}
replicate btnk node on  8
current bottleneck number  9
procid to max time in split
{11: 10874.0, 13: 10395.0}
replicate btnk node on  13
current bottleneck number  13
procid to max time in split
{11: 10874.0}
replicate btnk node on  11
current bottleneck number  8
Output of HEFT scheduler
#############################################################################################
                                result for tpheft + split
#############################################################################################
==============================================
               print task info
==============================================
task_number            task_uprank
(0, '              ', 14647.11352072661)
(1, '              ', 10155.454051730438)
(2, '              ', 3644.6284466977377)
(3, '              ', 579)
==============================================
               print processor info
==============================================
processor_number     task_number     start_time     end_time
('     ', 0, '      ', 1, '    ', 0.0, '    ', 193.1182795049076)
('     ', 1, '      ', 3, '    ', 0, '    ', 390)
('     ', 2, '      ', 1, '    ', 0.0, '    ', 314.7549273710083)
('     ', 3, '      ', 1, '    ', 0.0, '    ', 820.5293874664724)
('     ', 4, '      ', 1, '    ', 0.0, '    ', 672.0920641844007)
('     ', 5, '      ', 0, '    ', 0.0, '    ', 832.1517386722866)
('     ', 6, '      ', 0, '    ', 0.0, '    ', 399.84826132771343)
('     ', 7, '      ', 2, '    ', 0, '    ', 264)
('     ', 8, '      ', 1, '    ', 0.0, '    ', 1043.502905949364)
('     ', 9, '      ', 1, '    ', 0.0, '    ', 116.80708912611661)
('     ', 10, '      ', 1, '    ', 0.0, '    ', 340.6381084834284)
('     ', 11, '      ', 1, '    ', 0.0, '    ', 953.425220964594)
('     ', 12, '      ', 1, '    ', 0.0, '    ', 205.8018797845345)
('     ', 13, '      ', 1, '    ', 0.0, '    ', 91.62973640321367)
('     ', 14, '      ', 1, '    ', 0.0, '    ', 120.70040076195987)
==============================================
               print link info
==============================================
link_name    start_task_num   end_task_num   start_time   end_time
('0_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 6.508467695180032)
('2_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 10.607863128984048)
('3_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 27.653462038717493)
('4_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 22.650830874970982)
('5_0', '      ', 0, '      ', 1, '       ', 0.0, '      ', 5.126005619131093)
('5_2', '      ', 0, '      ', 1, '       ', 0.0, '      ', 8.354649443280621)
('5_3', '      ', 0, '      ', 1, '       ', 0.0, '      ', 21.779596740392694)
('5_4', '      ', 0, '      ', 1, '       ', 0.0, '      ', 17.83957327299565)
('5_7', '      ', 0, '      ', 2, '       ', 0.0, '      ', 145.43229514962258)
('5_8', '      ', 0, '      ', 1, '       ', 0.0, '      ', 27.69806034513752)
('5_9', '      ', 0, '      ', 1, '       ', 0.0, '      ', 3.100451167801566)
('5_10', '      ', 0, '      ', 1, '       ', 0.0, '      ', 9.04167571631596)
('5_11', '      ', 0, '      ', 1, '       ', 0.0, '      ', 25.307097042367836)
('5_12', '      ', 0, '      ', 1, '       ', 0.0, '      ', 5.462670830062241)
('5_13', '      ', 0, '      ', 1, '       ', 0.0, '      ', 2.432159943048985)
('5_14', '      ', 0, '      ', 1, '       ', 0.0, '      ', 3.203792691832977)
('6_0', '      ', 0, '      ', 1, '       ', 0.0, '      ', 2.46304170154817)
('6_2', '      ', 0, '      ', 1, '       ', 0.0, '      ', 4.0144025406090975)
('6_3', '      ', 0, '      ', 1, '       ', 0.0, '      ', 10.465079244993683)
('6_4', '      ', 0, '      ', 1, '       ', 0.0, '      ', 8.57190104225064)
('6_7', '      ', 0, '      ', 2, '       ', 0.0, '      ', 69.88010437766577)
('6_8', '      ', 0, '      ', 1, '       ', 0.0, '      ', 13.308896390487298)
('6_9', '      ', 0, '      ', 1, '       ', 0.0, '      ', 1.4897643676800039)
('6_10', '      ', 0, '      ', 1, '       ', 0.0, '      ', 4.344518128900649)
('6_11', '      ', 0, '      ', 1, '       ', 0.0, '      ', 12.16004038853244)
('6_12', '      ', 0, '      ', 1, '       ', 0.0, '      ', 2.624809072791218)
('6_13', '      ', 0, '      ', 1, '       ', 0.0, '      ', 1.1686509554743956)
('6_14', '      ', 0, '      ', 1, '       ', 0.0, '      ', 1.539419889367484)
('7_1', '      ', 2, '      ', 3, '       ', 0, '      ', 229.58290700450422)
('8_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 35.1681102928702)
('9_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 3.9366297592042567)
('10_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 11.480177487575876)
('11_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 32.132314280794176)
('12_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 6.935930092267258)
('13_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 3.088103212327048)
('14_1', '      ', 1, '      ', 3, '       ', 0.0, '      ', 4.067842056010737)
Assign random master and slaves
Successfully finish HEFT mapping 
Time to finish HEFT mapping 15.0400950909
 * Serving Flask app "master" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:8888/ (Press CTRL+C to quit)
('Recieved request for current mapping. Current mappings done:', 4)
{'task0': ['node6', 0.6754478398314014, 'node7', 0.32455216016859856], 'task1': ['node1', 0.03963026462239023, 'node3', 0.06459161242992167, 'node4', 0.16838280062927816, 'node5', 0.13792162203661001, 'node9', 0.21413973034052208, 'node10', 0.023970262492533676, 'node11', 0.06990316201178504, 'node12', 0.19565467288417687, 'node13', 0.04223309661082178, 'node14', 0.01880355764482119, 'node15', 0.024769218297139316], 'task2': 'node8', 'task3': 'node2'}
10.244.0.1 - - [10/Sep/2020 20:21:37] "GET / HTTP/1.1" 200 -

