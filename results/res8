Start the HEFT scheduler
#############################################################################################
                                   result for tpheft
#############################################################################################
==============================================
               print task info
==============================================
task_number            task_uprank
(0, '              ', 6133.240266001479)
(2, '              ', 3314.4026838234236)
(1, '              ', 3303.8709753275116)
(3, '              ', 3038.328371498635)
(4, '              ', 116)
==============================================
               print processor info
==============================================
processor_number     task_number     start_time     end_time
('     ', 0, '      ', 3, '    ', 0, '    ', 167)
('     ', 1, '      ', 0, '    ', 0, '    ', 213)
('     ', 4, '      ', 1, '    ', 0, '    ', 533)
('     ', 6, '      ', 2, '    ', 0, '    ', 427)
('     ', 7, '      ', 4, '    ', 0, '    ', 87)
==============================================
               print link info
==============================================
link_name    start_task_num   end_task_num   start_time   end_time
('0_7', '      ', 3, '      ', 4, '       ', 0, '      ', 212.7672367104949)
('1_0', '      ', 0, '      ', 3, '       ', 0, '      ', 142.9971319806364)
('1_4', '      ', 0, '      ', 1, '       ', 0, '      ', 158.85446351900578)
('1_6', '      ', 0, '      ', 2, '       ', 0, '      ', 227.04095424867467)
('4_7', '      ', 1, '      ', 4, '       ', 0, '      ', 154.61628309505537)
('6_7', '      ', 2, '      ', 4, '       ', 0, '      ', 149.47688093399148)
current bottleneck number  4
procid to max time in split
{2: 540.0, 3: 551.0, 5: 666.0, 8: 2833.1170079515387, 9: 2833.910827330578, 10: 2772.2269924034813, 11: 2855.340640487072, 12: 5702.0279108218565, 13: 5526.563861988916, 14: 5699.119957771519}
replicate btnk node on  2
current bottleneck number  6
procid to max time in split
{3: 440.0, 5: 531.0, 8: 2833.1170079515387, 9: 2833.910827330578, 10: 2803.6851881243238, 11: 2855.340640487072, 12: 5702.0279108218565, 13: 5879.513167894122, 14: 5699.119957771519}
replicate btnk node on  3
current bottleneck number  2
procid to max time in split
{5: 666.0, 8: 2833.1170079515387, 9: 2833.910827330578, 10: 2772.2269924034813, 11: 2855.340640487072, 12: 5702.0279108218565, 13: 5526.563861988916, 14: 5699.119957771519}
replicate btnk node on  5
Output of HEFT scheduler
#############################################################################################
                                result for tpheft + split
#############################################################################################
==============================================
               print task info
==============================================
task_number            task_uprank
(0, '              ', 6133.240266001479)
(2, '              ', 3314.4026838234236)
(1, '              ', 3303.8709753275116)
(3, '              ', 3038.328371498635)
(4, '              ', 116)
==============================================
               print processor info
==============================================
processor_number     task_number     start_time     end_time
('     ', 0, '      ', 3, '    ', 0, '    ', 167)
('     ', 1, '      ', 0, '    ', 0, '    ', 213)
('     ', 2, '      ', 1, '    ', 0.0, '    ', 77.01666245428966)
('     ', 3, '      ', 2, '    ', 0.0, '    ', 216.70126874279123)
('     ', 4, '      ', 1, '    ', 0.0, '    ', 264.7614165890028)
('     ', 5, '      ', 1, '    ', 0.0, '    ', 191.22192095670752)
('     ', 6, '      ', 2, '    ', 0.0, '    ', 210.29873125720877)
('     ', 7, '      ', 4, '    ', 0, '    ', 87)
==============================================
               print link info
==============================================
link_name    start_task_num   end_task_num   start_time   end_time
('0_7', '      ', 3, '      ', 4, '       ', 0, '      ', 212.7672367104949)
('1_0', '      ', 0, '      ', 3, '       ', 0, '      ', 142.9971319806364)
('1_2', '      ', 0, '      ', 1, '       ', 0.0, '      ', 22.95392231932559)
('1_3', '      ', 0, '      ', 2, '       ', 0.0, '      ', 115.22262960717053)
('1_4', '      ', 0, '      ', 1, '       ', 0.0, '      ', 78.90906715342972)
('1_5', '      ', 0, '      ', 1, '       ', 0.0, '      ', 56.991474046250474)
('1_6', '      ', 0, '      ', 2, '       ', 0.0, '      ', 111.81832464150413)
('2_7', '      ', 1, '      ', 4, '       ', 0.0, '      ', 22.34151985941608)
('3_7', '      ', 2, '      ', 4, '       ', 0.0, '      ', 75.85908605646625)
('4_7', '      ', 1, '      ', 4, '       ', 0.0, '      ', 76.80380138831735)
('5_7', '      ', 1, '      ', 4, '       ', 0.0, '      ', 55.47096184732193)
('6_7', '      ', 2, '      ', 4, '       ', 0.0, '      ', 73.61779487752523)
Assign random master and slaves
Successfully finish HEFT mapping 
Time to finish HEFT mapping 15.0883979797
 * Serving Flask app "master" (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://0.0.0.0:8888/ (Press CTRL+C to quit)
('Recieved request for current mapping. Current mappings done:', 5)
{'task0': 'node2', 'task1': ['node4', 0.5074971164936563, 'node7', 0.49250288350634375], 'task2': ['node3', 0.14449655244707255, 'node5', 0.49673811742777263, 'node6', 0.3587653301251548], 'task3': 'node1', 'task4': 'node8'}
10.244.0.1 - - [21/Sep/2020 22:54:23] "GET / HTTP/1.1" 200 -

