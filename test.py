global_task_node_map = {(5, 'home', 'task8'): 'node3', (9, 'home', 'task9'): 'node7', (10, 'home', 'task4'): 'node7', (1, 'home', 'task3'): 'node6', (1, 'home', 'task2'): 'node6', (9, 'home', 'task6'): 'node3', (1, 'home', 'task9'): 'node7', (10, 'home', 'task1'): 'node7', (10, 'home', 'task5'): 'node3', (3, 'home', 'task0'): 'node9', (4, 'home', 'task11'): 'node6', (1, 'home', 'task6'): 'node6', (8, 'home', 'task7'): 'node7', (5, 'home', 'task1'): 'node7', (0, 'home', 'task1'): 'node6', (8, 'home', 'task0'): 'node9', (9, 'home', 'task11'): 'node3', (9, 'home', 'task1'): 'node3', (5, 'home', 'task2'): 'node7', (3, 'home', 'task7'): 'node7', (3, 'home', 'task6'): 'node6', (0, 'home', 'task11'): 'node6', (9, 'home', 'task5'): 'node7', (11, 'home', 'task1'): 'node7', (2, 'home', 'task2'): 'node6', (5, 'home', 'task5'): 'node3', (2, 'home', 'task1'): 'node6', (4, 'home', 'task8'): 'node7', (6, 'home', 'task10'): 'node3', (1, 'home', 'task1'): 'node6', (6, 'home', 'task9'): 'node3', (3, 'home', 'task2'): 'node6', (3, 'home', 'task9'): 'node7', (8, 'home', 'task2'): 'node3', (9, 'home', 'task4'): 'node3', (2, 'home', 'task4'): 'node6', (9, 'home', 'task0'): 'node9', (8, 'home', 'task1'): 'node3', (2, 'home', 'task0'): 'node9', (6, 'home', 'task1'): 'node7', (0, 'home', 'task5'): 'node7', (1, 'home', 'task8'): 'node7', (3, 'home', 'task1'): 'node6', (6, 'home', 'task5'): 'node3', (6, 'home', 'task4'): 'node7', (1, 'home', 'task0'): 'node9', (3, 'home', 'task4'): 'node6', (11, 'home', 'task10'): 'node3', (10, 'home', 'task7'): 'node3', (8, 'home', 'task4'): 'node3', (12, 'home', 'task7'): 'node3', (7, 'home', 'task11'): 'node3', (9, 'home', 'task10'): 'node7', (4, 'home', 'task7'): 'node7', (11, 'home', 'task11'): 'node7', (12, 'home', 'task9'): 'node3', (10, 'home', 'task6'): 'node7', (1, 'home', 'task10'): 'node7', (4, 'home', 'task9'): 'node7', (0, 'home', 'task6'): 'node6', (4, 'home', 'task3'): 'node6', (6, 'home', 'task2'): 'node7', (10, 'home', 'task10'): 'node3', (3, 'home', 'task10'): 'node7', (12, 'home', 'task11'): 'node7', (5, 'home', 'task11'): 'node7', (0, 'home', 'task8'): 'node7', (4, 'home', 'task1'): 'node6', (0, 'home', 'task2'): 'node6', (0, 'home', 'task3'): 'node6', (11, 'home', 'task4'): 'node7', (2, 'home', 'task9'): 'node7', (4, 'home', 'task5'): 'node7', (6, 'home', 'task8'): 'node3', (1, 'home', 'task11'): 'node6', (7, 'home', 'task4'): 'node3', (12, 'home', 'task0'): 'node9', (12, 'home', 'task3'): 'node7', (10, 'home', 'task3'): 'node7', (8, 'home', 'task10'): 'node7', (12, 'home', 'task4'): 'node7', (12, 'home', 'task8'): 'node3', (3, 'home', 'task11'): 'node6', (7, 'home', 'task3'): 'node3', (1, 'home', 'task7'): 'node7', (6, 'home', 'task0'): 'node9', (7, 'home', 'task8'): 'node7', (10, 'home', 'task9'): 'node3', (2, 'home', 'task7'): 'node7', (0, 'home', 'task4'): 'node6', (9, 'home', 'task3'): 'node3', (2, 'home', 'task6'): 'node6', (0, 'home', 'task0'): 'node9', (4, 'home', 'task4'): 'node6', (7, 'home', 'task2'): 'node3', (12, 'home', 'task5'): 'node3', (8, 'home', 'task11'): 'node3', (2, 'home', 'task5'): 'node7', (11, 'home', 'task2'): 'node7', (12, 'home', 'task2'): 'node7', (11, 'home', 'task8'): 'node3', (8, 'home', 'task6'): 'node3', (12, 'home', 'task1'): 'node7', (0, 'home', 'task9'): 'node7', (11, 'home', 'task9'): 'node3', (8, 'home', 'task3'): 'node3', (7, 'home', 'task5'): 'node7', (7, 'home', 'task1'): 'node3', (3, 'home', 'task3'): 'node6', (10, 'home', 'task8'): 'node3', (5, 'home', 'task7'): 'node3', (6, 'home', 'task3'): 'node7', (4, 'home', 'task2'): 'node6', (8, 'home', 'task9'): 'node7', (0, 'home', 'task10'): 'node7', (7, 'home', 'task7'): 'node7', (11, 'home', 'task0'): 'node9', (7, 'home', 'task6'): 'node3', (2, 'home', 'task8'): 'node7', (0, 'home', 'task7'): 'node7', (9, 'home', 'task8'): 'node7', (2, 'home', 'task3'): 'node6', (11, 'home', 'task5'): 'node3', (8, 'home', 'task5'): 'node7', (6, 'home', 'task11'): 'node7', (5, 'home', 'task9'): 'node3', (10, 'home', 'task0'): 'node9', (4, 'home', 'task6'): 'node6', (7, 'home', 'task10'): 'node7', (7, 'home', 'task9'): 'node7', (5, 'home', 'task6'): 'node7', (2, 'home', 'task11'): 'node6', (4, 'home', 'task0'): 'node9', (1, 'home', 'task5'): 'node7', (3, 'home', 'task5'): 'node7', (12, 'home', 'task6'): 'node7', (9, 'home', 'task2'): 'node3', (4, 'home', 'task10'): 'node7', (8, 'home', 'task8'): 'node7', (10, 'home', 'task11'): 'node7', (2, 'home', 'task10'): 'node7', (10, 'home', 'task2'): 'node7', (6, 'home', 'task7'): 'node3', (3, 'home', 'task8'): 'node7', (11, 'home', 'task3'): 'node7', (9, 'home', 'task7'): 'node7', (1, 'home', 'task4'): 'node6', (11, 'home', 'task7'): 'node3', (12, 'home', 'task10'): 'node3', (11, 'home', 'task6'): 'node7', (6, 'home', 'task6'): 'node7', (5, 'home', 'task10'): 'node3', (7, 'home', 'task0'): 'node9', (5, 'home', 'task0'): 'node9', (5, 'home', 'task3'): 'node7', (5, 'home', 'task4'): 'node7'}

global_task = dict()
for k in global_task_node_map:
    if k[1]=='home' and k[0]==11:
        global_task[k[2]] = global_task_node_map[k]
print(len(global_task))
    # global_assignment_str = ','.join("{!s}={!r}".format(k,v) for (k,v) in global_task.items())
    
